/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TanstackFormImport } from './routes/tanstack-form'
import { Route as ReactHookFormImport } from './routes/react-hook-form'
import { Route as IndexImport } from './routes/index'
import { Route as ControlsIndexImport } from './routes/controls/index'

// Create/Update Routes

const TanstackFormRoute = TanstackFormImport.update({
  id: '/tanstack-form',
  path: '/tanstack-form',
  getParentRoute: () => rootRoute,
} as any)

const ReactHookFormRoute = ReactHookFormImport.update({
  id: '/react-hook-form',
  path: '/react-hook-form',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ControlsIndexRoute = ControlsIndexImport.update({
  id: '/controls/',
  path: '/controls/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/react-hook-form': {
      id: '/react-hook-form'
      path: '/react-hook-form'
      fullPath: '/react-hook-form'
      preLoaderRoute: typeof ReactHookFormImport
      parentRoute: typeof rootRoute
    }
    '/tanstack-form': {
      id: '/tanstack-form'
      path: '/tanstack-form'
      fullPath: '/tanstack-form'
      preLoaderRoute: typeof TanstackFormImport
      parentRoute: typeof rootRoute
    }
    '/controls/': {
      id: '/controls/'
      path: '/controls'
      fullPath: '/controls'
      preLoaderRoute: typeof ControlsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/react-hook-form': typeof ReactHookFormRoute
  '/tanstack-form': typeof TanstackFormRoute
  '/controls': typeof ControlsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/react-hook-form': typeof ReactHookFormRoute
  '/tanstack-form': typeof TanstackFormRoute
  '/controls': typeof ControlsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/react-hook-form': typeof ReactHookFormRoute
  '/tanstack-form': typeof TanstackFormRoute
  '/controls/': typeof ControlsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/react-hook-form' | '/tanstack-form' | '/controls'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/react-hook-form' | '/tanstack-form' | '/controls'
  id: '__root__' | '/' | '/react-hook-form' | '/tanstack-form' | '/controls/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ReactHookFormRoute: typeof ReactHookFormRoute
  TanstackFormRoute: typeof TanstackFormRoute
  ControlsIndexRoute: typeof ControlsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ReactHookFormRoute: ReactHookFormRoute,
  TanstackFormRoute: TanstackFormRoute,
  ControlsIndexRoute: ControlsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/react-hook-form",
        "/tanstack-form",
        "/controls/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/react-hook-form": {
      "filePath": "react-hook-form.tsx"
    },
    "/tanstack-form": {
      "filePath": "tanstack-form.tsx"
    },
    "/controls/": {
      "filePath": "controls/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
